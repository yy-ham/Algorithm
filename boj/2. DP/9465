// https://hotgamza.tistory.com/110

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;
import java.util.StringTokenizer;

public class Main {
	public static void main(String[] args) throws IOException {
		/*
		 * 초기화 (n = 1)
		 * dp[0][1] = sticker[0][1]
		 * dp[1][1] = sticker[1][1]
		 * 
		 * dp[0][n] = max(dp[1][n - 1], dp[1][n - 2]) + sticker[0][n]
		 * dp[1][n] = max(dp[0][n - 1], dp[0][n - 2]) + sticker[1][n]
		 * 
		 */
		
		// 입출력
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringBuilder sb = new StringBuilder();
		StringTokenizer st;
		
		int t = Integer.parseInt(br.readLine());
		
		// 배열 생성 및 초기화
		for(int i = 0; i < t; i++) {
			int n = Integer.parseInt(br.readLine());
			int[][] sticker = new int[2][n + 1];
			int[][] dp = new int[2][n + 1];
			
			for(int j = 0; j < 2; j++) {
				st = new StringTokenizer(br.readLine());
				for(int k = 1; k <= n; k++) {
					sticker[j][k] = Integer.parseInt(st.nextToken());
				}
			}
			
			// 초기화
			dp[0][1] = sticker[0][1];
			dp[1][1] = sticker[1][1];
			
			// 루프 (최대값 구하기)
			for(int j = 2; j <= n; j++) {
				dp[0][j] = Math.max(dp[1][j - 1], dp[1][j - 2]) + sticker[0][j];
				dp[1][j] = Math.max(dp[0][j - 1], dp[0][j - 2]) + sticker[1][j];
			}
			
			sb.append(Math.max(dp[0][n], dp[1][n])).append("\n");
		}
		
		// 최종 출력
		System.out.println(sb);
	}
}
