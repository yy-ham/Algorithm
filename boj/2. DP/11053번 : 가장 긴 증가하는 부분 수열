// https://hotgamza.tistory.com/112

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;
import java.util.StringTokenizer;

public class Main {
	public static void main(String[] args) throws IOException {
		/*
		 * 초기 상태에서는 자기 자신만이 부분 수열이므로 각 원소로 끝나는 최장 부분 수열의 길이는 1이다.
		 * 
		 * 현재 숫자와 그 이전의 숫자들을 비교한다.
		 * 현재 숫자가 그 이전 숫자보다 크면 수열의 길이는 1 증가한다.
		 * 
		 */
		
		// 입출력 BufferedReader, StringTokenizer
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
		
		// 입력
		int n = Integer.parseInt(br.readLine());
		st = new StringTokenizer(br.readLine());
		
		// 배열 선언 및 초기화
		int[] seq = new int[n + 1];
		int[] dp = new int[n + 1];
		for(int i = 1; i <= n; i++) {
			seq[i] = Integer.parseInt(st.nextToken());
			dp[i] = 1; // dp 테이블 초기값은 1
		}
		
		// 숫자 비교해서 dp 테이블 채우기, 이중 for (ex. 구구단)
		for(int i = 2; i <= n; i++) {
			for(int j = 1; j < i; j++) {
				if(seq[i] > seq[j]) {
					dp[i] = Math.max(dp[i], dp[j] + 1);
				}
			}
		}
		
		// 최대값 찾기
		int max = dp[1];
		for(int i = 2; i <= n; i++) {
			if(dp[i] > max) {
				max = dp[i];
			}
		}
		
		// 출력
		System.out.println(max);
	}
}
